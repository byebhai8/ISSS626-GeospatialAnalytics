{
  "hash": "fa377bfc919e5e55c2dc2aa5be12fc1a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 08\"\nauthor: \"Bhairavi Vairavelu\"\ndate: \"Oct 21 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n# Geographically Weighted Predictive Models\n\n## 1.0 Overview\n\nPredictive modelling uses statistical learning or machine learning techniques to predict outcomes. However, a set of known outcomes and predictors (variables) will be used to calibrate the predictive models.\n\nIn this exercise, we will build predictive models by using geographical random forest method\n\n## 2.0 The Data\n\nAspatial data:\n\n-   HDB Resale data\n\nGeospatial data:\n\n-   MP14_SUBZONE_WEB_PL\n\nLocational factors with geographic coordinates:\n\n-   Eldercare data\n\n-   Hawker Centre data\n\n-   Parks data\n\n-   Supermarket data\n\n-   CHAS clinics data\n\n-   Childcare service data\n\n-   Kindergartens data\n\n-   MRT data\n\n-   Bus stops data\n\nLocational factors without geographic coordinates:\n\n-   Primary schooldata\n\n-   CBD coordinates\n\n-   Shopping malls data\n\n-   Good primary schools data\n\n## 3.0 Installing & Loading R Packages\n\nThe code chunk below will check and install the R packages that we require for this exercise.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'SpatialML' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in p_install(package, character.only = TRUE, ...):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'SpatialML'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'rsample' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\bhair\\AppData\\Local\\Temp\\RtmpoRm9dw\\downloaded_packages\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nrsample installed\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'rsample' was built under R version 4.2.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in pacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, : Failed to install/load:\nSpatialML, rsample\n```\n\n\n:::\n:::\n\n\n## 4.0 Preparing the Data\n\n### 4.1 Reading data file\n\nWe will read the input data set, which is a simple feature data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/rds/mdata.rds\")\n```\n:::\n\n\n### 4.2 Data Sampling\n\nThe entire data is split into training and test data sets, which are 65% and 35% respectively. This will be done using initial_split() of rsample package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n#resale_split <- rsample::initial_split(mdata, prop = 6.5/10,)\n#train_data <- training(resale_split)\n#test_data <- testing(resale_split)\n#write_rds(train_data, \"data/rds/train_data.rds\")\n#write_rds(test_data, \"data/rds/test_data.rds\")\n```\n:::\n\n\nx\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}