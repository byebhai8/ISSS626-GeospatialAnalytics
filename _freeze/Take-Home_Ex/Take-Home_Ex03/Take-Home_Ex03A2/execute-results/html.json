{
  "hash": "89f08725baac3740f49406dc5d321510",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 03A\"\nauthor: \"Bhairavi Vairavelu\"\ndate: \"Oct 21 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n# **Modelling Geography of Financial Inclusion with Geographically Weighted Methods**\n\n## 1.0 Overview\n\nFinancial inclusion is the availability and equality of opportunities to access financial services. It refers to processes by which individuals and businesses can access appropriate, affordable, and timely financial products and services. These financial products and services include banking, loan, equity, and insurance products. It provides paths to enhance inclusiveness in economic growth by enabling the unbanked population to access the means for savings, investments, and insurance towards improving household income and reducing income inequality.\n\n### 1.1 Tasks\n\nIn this exercise, we will be building an explanatory model to determine factors affecting financial inclusion by using geographical weighted regression methods.\n\n### 1.2 Study Area\n\nWe will be focusing on the FinScope Tanzania 2023 dataset for this exercise, and conduct our analysis at the district level.\n\n### 1.3 Analysis Method\n\nGeographically Weighted Regression (GWR) is the spatial statistical technique that we will use in this exercise. GWR takes non-stationary variables into consideration, and models the local relationships between these independent variables, and an outcome of interest. For this exercise, the dependent variable is formal_finservice_usage, and the independent variables are age, is_rural, is_urban, has_mobile_usage, has_bank_usage, has pension_usage, has_insurance_usage, has_investment usage.\n\n## 2.0 Data\n\nFor the purpose of this exercise, we will be using two datasets:\n\n-   FinScope Tanzania 2023, which contains individual survey interview data\n\n-   Tanzania geoBoundaries, which is a district level boundary GIS data\n\n## 3.0 Installing and Launching Packages\n\nWe intend to utilize the following R packages in this exercise:\n\n-   **olsrr**, for building OLS and performing diagnostic tests\n\n-   **corrplot**, for multivariate data visualization and analysis\n\n-   **ggpubr**, to customize ggplot2-based plots\n\n-   **sf**, for spatial data handling\n\n-   **spdep**, to create spatial weights matrix objects from polygon\n\n-   **GWmodel**, for calibrating geographically weighted family of models\n\n-   **tmap**, for visualizing geospatial objects\n\n-   **tidyverse**, for attribute data handling,\n\n-   **gtsummary**, to create analytical and summary tables\n\n-   **ggstatsplot**, to create graphics with details from statistical tests included in the plots\n\nThe code chunk below can be used to install and launch the above-mentioned R packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, ggstatsplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nalso installing the dependency 'glue'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  There are binary versions available but the source versions are later:\n          binary source needs_compilation\nglue       1.7.0  1.8.0              TRUE\ngtsummary  1.7.2  2.0.3             FALSE\n\n  Binaries will be installed\npackage 'glue' successfully unpacked and MD5 sums checked\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: cannot remove prior installation of package 'glue'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\R-4.2.2\\library\\00LOCK\\glue\\libs\\x64\\glue.dll to\nC:\\R-4.2.2\\library\\glue\\libs\\x64\\glue.dll: Permission denied\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: restored 'glue'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nThe downloaded binary packages are in\n\tC:\\Users\\bhair\\AppData\\Local\\Temp\\Rtmpkz7hFM\\downloaded_packages\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\ninstalling the source package 'gtsummary'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in utils::install.packages(package, ...): installation of package\n'gtsummary' had non-zero exit status\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in p_install(package, character.only = TRUE, ...):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'gtsummary'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, : Failed to install/load:\ngtsummary\n```\n\n\n:::\n:::\n\n\n## 4.0 Geospatial Data Wrangling\n\n### 4.1 Importing Geospatial Data\n\nThe geospatial data used in this exercise, the Tanzania geoBoundaries district level data, is in ESRI shapefile format. The code chunk below imports this shapefile by using st_read() of sf packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngb = st_read(dsn = \"data/geospatial\", layer = \"geoBoundaries-TZA-ADM2\") %>%\n  rename(district = shapeName)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `geoBoundaries-TZA-ADM2' from data source \n  `C:\\byebhai8\\ISSS626-GeospatialAnalytics\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 170 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 29.58953 ymin: -11.76235 xmax: 40.44473 ymax: -0.983143\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nThe report above shows that the R object used to contain the imported shapefile is called gb, and it is a simple feature object. The geometry type is multipolygon, representing the geographic boundaries of districts in Tanzania. The CRS is WGS 84. with no specific EPSG code provided in the data set. The dataset contains 170 rows and 5 columns.\n\n### 4.2 Updating CRS Information\n\nIt is noted that the correct EPSG code for Tanzania is EPSG: **21037**, which can be verified here: [EPSG.io](https://epsg.io/21037#:~:text=Scope%3A%20Engineering%20survey%2C%20topographic%20mapping,east%20of%2036%C2%B0E.)\n\nAs such, we will use the code chunk below to update the newly imported gb simple feature data frame with the correct EPSG code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbTransformed <- st_transform(gb, 21037)\n```\n:::\n\n\nAfter transforming the projection metadata, we can verify the projection of the newly transformed gbTransformed by using st_crs() of sf package. This can be achieved by using the code chunk below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(gbTransformed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:21037 \n  wkt:\nPROJCRS[\"Arc 1960 / UTM zone 37S\",\n    BASEGEOGCRS[\"Arc 1960\",\n        DATUM[\"Arc 1960\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4210]],\n    CONVERSION[\"UTM zone 37S\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",39,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",10000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Kenya - south of equator and east of 36°E; Tanzania - east of 36°E.\"],\n        BBOX[-11.75,36,0,41.6]],\n    ID[\"EPSG\",21037]]\n```\n\n\n:::\n:::\n\n\nNote that the EPSG is indicated as 21037 now. We can now use the st_bbox() of sf package to reveal the extent of gbTransformed, as shown in the code chunk below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_bbox(gbTransformed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     xmin      ymin      xmax      ymax \n-548109.3 8698827.9  658089.6 9890498.9 \n```\n\n\n:::\n:::\n\n\nThis bounding box basically provides us with the geographic extent of the Tanzania data (gbTransformed) in terms of projection, and this will be used in our visualizations for further spatial operations.\n\n### 4.3 Converting Multipolygon to Polygon\n\nIn the code chunk below, we can use tmap package to plot the polygons in gbTransformed data to visualize the geographical boundaries of the districts in Tanzania.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(gbTransformed) +\n  tm_polygons() +\n  tm_layout(main.title = \"Multipolygon Map\", main.title.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03A2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nHowever, it is noted that the gbTransformed simple feature data frame contains the geometry object in multipolygon type. However, we require the data to be of polygon type instead for our analysis. As such, we will use convert multipolygon to polygon.\n\nThe first step would be to calculate the area of each polygon, which can be done using the code chunk below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbPolygon <- gbTransformed %>%\n  st_cast(\"POLYGON\") %>%\n  mutate(area = st_area(.))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in st_cast.sf(., \"POLYGON\"): repeating attributes for all\nsub-geometries for which they may not be constant\n```\n\n\n:::\n:::\n\n\nNext, we will group the unique districts together and select the largest polygon by area using the code chunk below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbCleaned <- gbPolygon %>%\n  group_by(district) %>%\n  filter(area == max(area)) %>%\n  ungroup() %>%\n  select(-area) %>%\n  select(district)\n```\n:::\n\n\nWe can run our visualization again to verify how the polygons plot now in the map:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(gbCleaned) +\n  tm_polygons() +\n  tm_layout(main.title = \"Polygon Map\", main.title.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03A2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nTo have a better comparison, we can plot both the multipolygon map and polygon map side by side:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbTransformed_map <- tm_shape(gbTransformed) +\n  tm_polygons() +\n  tm_layout(main.title = \"Multipolygon Map\", main.title.size = 0.8)\n\ngbCleaned_map <- tm_shape(gbCleaned) +\n  tm_polygons() +\n  tm_layout(main.title = \"Polygon Map\", main.title.size = 0.8)\n\ntmap_arrange(gbTransformed_map, gbCleaned_map)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03A2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThe original multipolygon object contained small disconnected geometries, represented as tiny dots within the map. After converting this object to a polygon object, these small disconnected dots were removed, leaving only the main polygons. Hence, this side by side comparison illustrates how the conversion has streamlined the map by eliminating these small, isolated points, resulting in a cleaner and more coherent geographical representation.\n\n## 5.0 Aspatial Data Wrangling\n\n### 5.1 Importing Aspatial Data\n\nThe code chunk below uses read_csv() of readr package to import the csv file into R as a tibble data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntz = read_csv(\"data/aspatial/FinScope Tanzania 2023_Individual Main Data_FINAL.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 9915 Columns: 721\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (703): reg_name, dist_name, ward_code1, ward_name, ea_code, clustertype,...\ndbl  (13): SN, reg_code, dist_code, c8c, D6_1_1, D6_1_2, D6_1_3, gov_3, cmg4...\nlgl   (5): e_5_1, e_5_2, g_5_2__5, g_5_2__13, serv2_4\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nThe report above shows that the R object used to contain the imported attribute data is called tz, and it is a tibble data frame. Also, the dataset contains 9915 rows and 721 columns.\n\nAfter importing the file, it is important for us to examine if the file has been imported correctly. To do this, we will use head to display the first couple of rows of tz data frame .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(tz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 721\n     SN reg_name      reg_code dist_code dist_name ward_code1 ward_name ea_code\n  <dbl> <chr>            <dbl>     <dbl> <chr>     <chr>      <chr>     <chr>  \n1  4529 Mwanza              19         7 Misungwi  251        Mondo     004    \n2  4245 Kagera              18         7 Missenyi  011        Kakunyu   001    \n3  8149 Mbeya               12         3 Kyela     283        Nkuyu     301    \n4  6763 Dodoma               1         3 Kongwa    123        Kibaigwa  301    \n5  7805 Dar es Salaam        7         2 Ilala     252        Majohe    029    \n6  8232 Singida             13         1 Iramba    053        Shelui    301    \n# ℹ 713 more variables: clustertype <chr>, c1 <chr>, c2 <chr>, c7 <chr>,\n#   c8c <dbl>, c9 <chr>, c10 <chr>, c11 <chr>, c8n_a1 <chr>, c8n_a2 <chr>,\n#   c8n_b1 <chr>, c8n_b2 <chr>, c8n_c1 <chr>, c8n_c2 <chr>, c8n_d1 <chr>,\n#   c8n_d2 <chr>, c8n_e1 <chr>, c8n_e2 <chr>, c8n_f1 <chr>, c8n_f2 <chr>,\n#   c12_1 <chr>, c12_2 <chr>, c12_3 <chr>, c12_4 <chr>, c22 <chr>, c14 <chr>,\n#   c15 <chr>, C16 <chr>, c16_unit <chr>, c17_1__1 <chr>, c17_1__2 <chr>,\n#   c17_1__3 <chr>, c17_1__4 <chr>, c17_1__5 <chr>, c17_1__6 <chr>, …\n```\n\n\n:::\n:::\n\n\n### 5.2 Data Cleanup\n\nGiven that the tz tibble data frame contains 721 columns, we first want to cleanup the dataset and only retain the fields that we want to focus our analysis on. Some of the fields we can consider for our analysis are:\n\n1.  Overall Formal: this combines all variables that indicate **formal financial service usage** by an individual\n\n2.  Informal: this combines all variables that indicate **informal financial service usage** by an individual\n\n3.  Age: an individual's age\n\n4.  Land Size: the approx. land size that is used for farming by an individual's household\n\n5.  Is Rural: if an individual's cluster type is Rural\n\n6.  Is Urban: if an individual's cluster type is Urban\n\n7.  Has Bank Usage: this combines all variables that indicate bank service usage by an individual\n\n8.  Has Mobile Usage: this combines all variables that indicate mobile money usage by an individual\n\n9.  Has Insurance Usage: this combines all variables that indicate any insurance usage by an individual\n\n10. Has Investment Usage: this combines all variables that indicate formal investment mechanisms usage by an individual\n\n11. Has Pension Usage: this combines all variables that indicate pension service usage by an individual\n\nAs such, we will use the code chunk below to retain the columns that we intend to use for our analysis. Note that we also want to preprocess these fields into a numerical format for GWR, which generally requires numerical inputs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntzCleaned <- tz %>%\n  select(1,5,13,36,9,714,715,703,702,709,706,705) %>%\n  mutate(\n    land_size = cut(as.numeric(C16), \n                         breaks = c(0, 5, 10, 20, 50, 100, Inf), \n                         labels = c(\"0-5\", \"5-10\", \"10-20\", \"20-50\", \"50-100\", \"100+\"), \n                         include.lowest = TRUE),\n    formal_finservice_usage = if_else(OVERALL_FORMAL == \"OVERALL_FORMAL\", 1, 0),\n    informal_finservice_usage = if_else(INFORMAL == \"INFORMAL incl SACCO AND CMG RISK CONTRIBUTIONS\", 1, 0),\n    is_rural = if_else(clustertype == \"Rural\", 1, 0),\n    is_urban = if_else(clustertype == \"Urban\", 1, 0),\n    has_mobile_usage = if_else(MM == \"MM\", 1, 0),\n    has_bank_usage = if_else(BANKED == \"Banked\", 1, 0),\n    has_pension_usage = if_else(PENSION == \"PENSION\", 1, 0),\n    has_insurance_usage = if_else(INSURANCE == \"INSURANCE\", 1, 0),\n    has_investment_usage = if_else(FORM_INVESTMENTS == \"FORM_INVESTMENTS\", 1, 0)\n  ) %>%\n  rename(\n    district = dist_name,\n    age = c8c) %>% \n  select(1:3,13:22)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `land_size = cut(...)`.\nCaused by warning in `cut()`:\n! NAs introduced by coercion\n```\n\n\n:::\n:::\n\n\nLet's do a glimpse to check the tzCleaned data frame:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(tzCleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 9,915\nColumns: 13\n$ SN                        <dbl> 4529, 4245, 8149, 6763, 7805, 8232, 9411, 70…\n$ district                  <chr> \"Misungwi\", \"Missenyi\", \"Kyela\", \"Kongwa\", \"…\n$ age                       <dbl> 47, 63, 74, 29, 53, 39, 24, 55, 45, 56, 51, …\n$ land_size                 <fct> 0-5, 0-5, NA, NA, 0-5, 0-5, 0-5, 0-5, 0-5, 5…\n$ formal_finservice_usage   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ informal_finservice_usage <dbl> 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ is_rural                  <dbl> 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,…\n$ is_urban                  <dbl> 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,…\n$ has_mobile_usage          <dbl> 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ has_bank_usage            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ has_pension_usage         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ has_insurance_usage       <dbl> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ has_investment_usage      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n```\n\n\n:::\n:::\n\n\nLet's also do a summary statistic:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(tzCleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       SN         district              age          land_size   \n Min.   :   1   Length:9915        Min.   : 16.00   0-5   :5788  \n 1st Qu.:2480   Class :character   1st Qu.: 27.00   5-10  : 687  \n Median :4958   Mode  :character   Median : 37.00   10-20 : 248  \n Mean   :4958                      Mean   : 39.68   20-50 : 110  \n 3rd Qu.:7436                      3rd Qu.: 50.00   50-100:  22  \n Max.   :9915                      Max.   :100.00   100+  :  39  \n                                                    NA's  :3021  \n formal_finservice_usage informal_finservice_usage    is_rural     \n Min.   :0.0000          Min.   :0.0000            Min.   :0.0000  \n 1st Qu.:1.0000          1st Qu.:0.0000            1st Qu.:0.0000  \n Median :1.0000          Median :1.0000            Median :1.0000  \n Mean   :0.7531          Mean   :0.5364            Mean   :0.6655  \n 3rd Qu.:1.0000          3rd Qu.:1.0000            3rd Qu.:1.0000  \n Max.   :1.0000          Max.   :1.0000            Max.   :1.0000  \n                                                                   \n    is_urban      has_mobile_usage has_bank_usage   has_pension_usage\n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.00000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.00000  \n Median :0.0000   Median :1.0000   Median :0.0000   Median :0.00000  \n Mean   :0.3345   Mean   :0.7106   Mean   :0.2052   Mean   :0.04034  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:0.00000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.00000  \n                                                                     \n has_insurance_usage has_investment_usage\n Min.   :0.000       Min.   :0.00000     \n 1st Qu.:0.000       1st Qu.:0.00000     \n Median :0.000       Median :0.00000     \n Mean   :0.103       Mean   :0.04246     \n 3rd Qu.:0.000       3rd Qu.:0.00000     \n Max.   :1.000       Max.   :1.00000     \n                                         \n```\n\n\n:::\n:::\n\n\nWe can also further split the data for our analysis:\n\nOne that indicates **formal financial service usage** by an individual:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntzFormal <- tzCleaned %>%\n  select(1:5, 7:13) %>%\n  filter(formal_finservice_usage == \"1\")\n```\n:::\n\n\nAnother that indicates **informal financial service usage** by an individual:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntzInformal <- tzCleaned %>%\n  select(1:4, 6:13) %>%\n  filter(informal_finservice_usage == \"1\")\n```\n:::\n\n\n### 5.3 Performing Relational Join\n\nThe code chunk below will be used to update the gbCleaned with the attribute fields of tzCleaned dataframe. This will be performed using the left_join() of dplyr package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbTZ <- left_join(gbCleaned, tzCleaned)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(district)`\n```\n\n\n:::\n:::\n\n\nWe will also perform the relational join for both the **formal** and **informal** indicators.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbTZ_Formal <- left_join(gbCleaned, tzFormal)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(district)`\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngbTZ_Informal <- left_join(gbCleaned, tzInformal)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(district)`\n```\n\n\n:::\n:::\n\n\nWe can now check the summary statistics again:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gbTZ)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   district                  geometry          SN            age        \n Length:9076        POLYGON      :9076   Min.   :   1   Min.   : 16.00  \n Class :character   epsg:21037   :   0   1st Qu.:2385   1st Qu.: 27.00  \n Mode  :character   +proj=utm ...:   0   Median :4664   Median : 37.00  \n                                         Mean   :4814   Mean   : 39.73  \n                                         3rd Qu.:7316   3rd Qu.: 50.00  \n                                         Max.   :9915   Max.   :100.00  \n                                         NA's   :34     NA's   :34      \n  land_size    formal_finservice_usage informal_finservice_usage\n 0-5   :5482   Min.   :0.000           Min.   :0.0000           \n 5-10  : 656   1st Qu.:0.000           1st Qu.:0.0000           \n 10-20 : 237   Median :1.000           Median :1.0000           \n 20-50 : 103   Mean   :0.741           Mean   :0.5309           \n 50-100:  19   3rd Qu.:1.000           3rd Qu.:1.0000           \n 100+  :  35   Max.   :1.000           Max.   :1.0000           \n NA's  :2544   NA's   :34              NA's   :34               \n    is_rural         is_urban      has_mobile_usage has_bank_usage  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.6984   Mean   :0.3016   Mean   :0.6971   Mean   :0.1954  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n NA's   :34       NA's   :34       NA's   :34       NA's   :34      \n has_pension_usage has_insurance_usage has_investment_usage\n Min.   :0.00000   Min.   :0.00000     Min.   :0.00000     \n 1st Qu.:0.00000   1st Qu.:0.00000     1st Qu.:0.00000     \n Median :0.00000   Median :0.00000     Median :0.00000     \n Mean   :0.03771   Mean   :0.09766     Mean   :0.03959     \n 3rd Qu.:0.00000   3rd Qu.:0.00000     3rd Qu.:0.00000     \n Max.   :1.00000   Max.   :1.00000     Max.   :1.00000     \n NA's   :34        NA's   :34          NA's   :34          \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gbTZ_Formal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   district                  geometry          SN            age        \n Length:6734        POLYGON      :6734   Min.   :   1   Min.   : 16.00  \n Class :character   epsg:21037   :   0   1st Qu.:2427   1st Qu.: 28.00  \n Mode  :character   +proj=utm ...:   0   Median :5100   Median : 37.00  \n                                         Mean   :5076   Mean   : 39.96  \n                                         3rd Qu.:7761   3rd Qu.: 50.00  \n                                         Max.   :9915   Max.   :100.00  \n                                         NA's   :34     NA's   :34      \n  land_size    formal_finservice_usage    is_rural         is_urban     \n 0-5   :3899   Min.   :1               Min.   :0.0000   Min.   :0.0000  \n 5-10  : 462   1st Qu.:1               1st Qu.:0.0000   1st Qu.:0.0000  \n 10-20 : 181   Median :1               Median :1.0000   Median :0.0000  \n 20-50 :  83   Mean   :1               Mean   :0.6427   Mean   :0.3573  \n 50-100:  11   3rd Qu.:1               3rd Qu.:1.0000   3rd Qu.:1.0000  \n 100+  :  26   Max.   :1               Max.   :1.0000   Max.   :1.0000  \n NA's  :2072   NA's   :34              NA's   :34       NA's   :34      \n has_mobile_usage has_bank_usage   has_pension_usage has_insurance_usage\n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000    Min.   :0.0000     \n 1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.0000    1st Qu.:0.0000     \n Median :1.0000   Median :0.0000   Median :0.0000    Median :0.0000     \n Mean   :0.9407   Mean   :0.2637   Mean   :0.0509    Mean   :0.1318     \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000    3rd Qu.:0.0000     \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000    Max.   :1.0000     \n NA's   :34       NA's   :34       NA's   :34        NA's   :34         \n has_investment_usage\n Min.   :0.00000     \n 1st Qu.:0.00000     \n Median :0.00000     \n Mean   :0.05343     \n 3rd Qu.:0.00000     \n Max.   :1.00000     \n NA's   :34          \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gbTZ_Informal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   district                  geometry          SN            age        \n Length:4834        POLYGON      :4834   Min.   :   1   Min.   : 16.00  \n Class :character   epsg:21037   :   0   1st Qu.:2531   1st Qu.: 28.00  \n Mode  :character   +proj=utm ...:   0   Median :5214   Median : 36.00  \n                                         Mean   :5098   Mean   : 38.66  \n                                         3rd Qu.:7676   3rd Qu.: 48.00  \n                                         Max.   :9915   Max.   :100.00  \n                                         NA's   :34     NA's   :34      \n  land_size    informal_finservice_usage    is_rural         is_urban     \n 0-5   :2887   Min.   :1                 Min.   :0.0000   Min.   :0.0000  \n 5-10  : 334   1st Qu.:1                 1st Qu.:0.0000   1st Qu.:0.0000  \n 10-20 : 138   Median :1                 Median :1.0000   Median :0.0000  \n 20-50 :  65   Mean   :1                 Mean   :0.6675   Mean   :0.3325  \n 50-100:   8   3rd Qu.:1                 3rd Qu.:1.0000   3rd Qu.:1.0000  \n 100+  :  18   Max.   :1                 Max.   :1.0000   Max.   :1.0000  \n NA's  :1384   NA's   :34                NA's   :34       NA's   :34      \n has_mobile_usage has_bank_usage   has_pension_usage has_insurance_usage\n Min.   :0.0000   Min.   :0.0000   Min.   :0.000     Min.   :0.000      \n 1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.000     1st Qu.:0.000      \n Median :1.0000   Median :0.0000   Median :0.000     Median :0.000      \n Mean   :0.8225   Mean   :0.2687   Mean   :0.055     Mean   :0.114      \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.000     3rd Qu.:0.000      \n Max.   :1.0000   Max.   :1.0000   Max.   :1.000     Max.   :1.000      \n NA's   :34       NA's   :34       NA's   :34        NA's   :34         \n has_investment_usage\n Min.   :0.0000      \n 1st Qu.:0.0000      \n Median :0.0000      \n Mean   :0.0575      \n 3rd Qu.:0.0000      \n Max.   :1.0000      \n NA's   :34          \n```\n\n\n:::\n:::\n\n\nNoted that there are 34 SN (serial numbers) that are NA. Hence, we will remove those records from our analysis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbTZ <- gbTZ %>%\n  filter(!is.na(SN))\n\ngbTZ_Formal <- gbTZ_Formal %>%\n  filter(!is.na(SN))\n\ngbTZ_Informal <- gbTZ_Informal %>%\n  filter(!is.na(SN))\n```\n:::\n\n\nWe can now run the summary statistics again to ensure that the NA records have been removed:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gbTZ)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   district                  geometry          SN            age        \n Length:9042        POLYGON      :9042   Min.   :   1   Min.   : 16.00  \n Class :character   epsg:21037   :   0   1st Qu.:2385   1st Qu.: 27.00  \n Mode  :character   +proj=utm ...:   0   Median :4664   Median : 37.00  \n                                         Mean   :4814   Mean   : 39.73  \n                                         3rd Qu.:7316   3rd Qu.: 50.00  \n                                         Max.   :9915   Max.   :100.00  \n                                                                        \n  land_size    formal_finservice_usage informal_finservice_usage\n 0-5   :5482   Min.   :0.000           Min.   :0.0000           \n 5-10  : 656   1st Qu.:0.000           1st Qu.:0.0000           \n 10-20 : 237   Median :1.000           Median :1.0000           \n 20-50 : 103   Mean   :0.741           Mean   :0.5309           \n 50-100:  19   3rd Qu.:1.000           3rd Qu.:1.0000           \n 100+  :  35   Max.   :1.000           Max.   :1.0000           \n NA's  :2510                                                    \n    is_rural         is_urban      has_mobile_usage has_bank_usage  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.6984   Mean   :0.3016   Mean   :0.6971   Mean   :0.1954  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n                                                                    \n has_pension_usage has_insurance_usage has_investment_usage\n Min.   :0.00000   Min.   :0.00000     Min.   :0.00000     \n 1st Qu.:0.00000   1st Qu.:0.00000     1st Qu.:0.00000     \n Median :0.00000   Median :0.00000     Median :0.00000     \n Mean   :0.03771   Mean   :0.09766     Mean   :0.03959     \n 3rd Qu.:0.00000   3rd Qu.:0.00000     3rd Qu.:0.00000     \n Max.   :1.00000   Max.   :1.00000     Max.   :1.00000     \n                                                           \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gbTZ_Formal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   district                  geometry          SN            age        \n Length:6700        POLYGON      :6700   Min.   :   1   Min.   : 16.00  \n Class :character   epsg:21037   :   0   1st Qu.:2427   1st Qu.: 28.00  \n Mode  :character   +proj=utm ...:   0   Median :5100   Median : 37.00  \n                                         Mean   :5076   Mean   : 39.96  \n                                         3rd Qu.:7761   3rd Qu.: 50.00  \n                                         Max.   :9915   Max.   :100.00  \n                                                                        \n  land_size    formal_finservice_usage    is_rural         is_urban     \n 0-5   :3899   Min.   :1               Min.   :0.0000   Min.   :0.0000  \n 5-10  : 462   1st Qu.:1               1st Qu.:0.0000   1st Qu.:0.0000  \n 10-20 : 181   Median :1               Median :1.0000   Median :0.0000  \n 20-50 :  83   Mean   :1               Mean   :0.6427   Mean   :0.3573  \n 50-100:  11   3rd Qu.:1               3rd Qu.:1.0000   3rd Qu.:1.0000  \n 100+  :  26   Max.   :1               Max.   :1.0000   Max.   :1.0000  \n NA's  :2038                                                            \n has_mobile_usage has_bank_usage   has_pension_usage has_insurance_usage\n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000    Min.   :0.0000     \n 1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.0000    1st Qu.:0.0000     \n Median :1.0000   Median :0.0000   Median :0.0000    Median :0.0000     \n Mean   :0.9407   Mean   :0.2637   Mean   :0.0509    Mean   :0.1318     \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000    3rd Qu.:0.0000     \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000    Max.   :1.0000     \n                                                                        \n has_investment_usage\n Min.   :0.00000     \n 1st Qu.:0.00000     \n Median :0.00000     \n Mean   :0.05343     \n 3rd Qu.:0.00000     \n Max.   :1.00000     \n                     \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gbTZ_Informal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   district                  geometry          SN            age        \n Length:4800        POLYGON      :4800   Min.   :   1   Min.   : 16.00  \n Class :character   epsg:21037   :   0   1st Qu.:2531   1st Qu.: 28.00  \n Mode  :character   +proj=utm ...:   0   Median :5214   Median : 36.00  \n                                         Mean   :5098   Mean   : 38.66  \n                                         3rd Qu.:7676   3rd Qu.: 48.00  \n                                         Max.   :9915   Max.   :100.00  \n                                                                        \n  land_size    informal_finservice_usage    is_rural         is_urban     \n 0-5   :2887   Min.   :1                 Min.   :0.0000   Min.   :0.0000  \n 5-10  : 334   1st Qu.:1                 1st Qu.:0.0000   1st Qu.:0.0000  \n 10-20 : 138   Median :1                 Median :1.0000   Median :0.0000  \n 20-50 :  65   Mean   :1                 Mean   :0.6675   Mean   :0.3325  \n 50-100:   8   3rd Qu.:1                 3rd Qu.:1.0000   3rd Qu.:1.0000  \n 100+  :  18   Max.   :1                 Max.   :1.0000   Max.   :1.0000  \n NA's  :1350                                                              \n has_mobile_usage has_bank_usage   has_pension_usage has_insurance_usage\n Min.   :0.0000   Min.   :0.0000   Min.   :0.000     Min.   :0.000      \n 1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.000     1st Qu.:0.000      \n Median :1.0000   Median :0.0000   Median :0.000     Median :0.000      \n Mean   :0.8225   Mean   :0.2687   Mean   :0.055     Mean   :0.114      \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.000     3rd Qu.:0.000      \n Max.   :1.0000   Max.   :1.0000   Max.   :1.000     Max.   :1.000      \n                                                                        \n has_investment_usage\n Min.   :0.0000      \n 1st Qu.:0.0000      \n Median :0.0000      \n Mean   :0.0575      \n 3rd Qu.:0.0000      \n Max.   :1.0000      \n                     \n```\n\n\n:::\n:::\n\n\n## 6.0 Exploratory Data Analysis\n\n### 6.1 Spatial Distribution\n\nIn the code chunk below, we aim to visualize the spatial distribution of formal and informal financial service usage across the districts in Tanzania.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nformalMap <- tm_shape(gbCleaned) +\n  tm_polygons() +\n  tm_shape(gbTZ) +  \n  tm_fill(col = \"formal_finservice_usage\",\n          alpha = 0.7,\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Formal Financial Service Usage\") +\n  tm_borders() +\n  tm_layout(main.title = \"Formal Financial Service Usage by District\", main.title.size = 0.8)\n\ninformalMap <- tm_shape(gbCleaned) +\n  tm_polygons() +\n  tm_shape(gbTZ) +  \n  tm_fill(col = \"informal_finservice_usage\",\n          alpha = 0.7,\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Informal Financial Service Usage\") +\n  tm_borders() +\n  tm_layout(main.title = \"Informal Financial Service Usage by District\", main.title.size = 0.8)\n\ntmap_arrange(formalMap, informalMap)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03A2_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nThe darker shades of blue represent higher usage rates for formal and informal financial services, with lighter shades indicating lower usage. This allows for a quick comparison across the districts, helping us to highlight areas that have higher or lower financial service adoption.\n\n### 6.2 Demographic & Land Size\n\nThe code chunk below plots the demographic and land distribution in Tanzania. By examining age and land size, we can identify patterns that may influence access to and usage of financial services.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage <- ggplot(gbTZ, aes(x= `age`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\") +\n  labs(title = \"Distribution by Age\", x = \"Age\", y = \"Count\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 10))\n\nland <- ggplot(gbTZ, aes(x = land_size)) + \n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(title = \"Distribution by Land Size\", x = \"Land Size\", y = \"Count\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 10))\n\nggarrange(age, land, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03A2_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nThe histogram on the left represents the count distribution across ages, highlighting that majority of them are below the age of 50. The bar chart on the right represents counts across the different land size categories, showing how land size ownership may relate to financial inclusion. For example, majority have land size of 0-5 acres, followed by people who have no lands.\n\n### 6.3 Multiple Histogram Plots - Formal\n\nWe will also be drawing a multiple histogram plot, also known as trellis plot, by using ggarrange() of ggpubr package. This will be achieved using the code chunk below, which will create 7 histograms that represent the different independent variables for **formal financial service usage**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_rural_1 <- ggplot(gbTZ_Formal, aes(x = as.factor(is_rural))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Rural\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nis_urban_1 <- ggplot(gbTZ_Formal, aes(x = as.factor(is_urban))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Urban\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_mobile_usage_1 <- ggplot(gbTZ_Formal, aes(x = as.factor(has_mobile_usage))) + \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Mobile Banking\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_bank_usage_1 <- ggplot(gbTZ_Formal, aes(x = as.factor(has_bank_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Bank\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_pension_usage_1 <- ggplot(gbTZ_Formal, aes(x = as.factor(has_pension_usage))) +\n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Pension\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_insurance_usage_1 <- ggplot(gbTZ_Formal, aes(x = as.factor(has_insurance_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Insurance\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_investment_usage_1 <- ggplot(gbTZ_Formal, aes(x = as.factor(has_investment_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Investment\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nggarrange(\n  is_rural_1, is_urban_1, has_mobile_usage_1, \n  has_bank_usage_1, has_pension_usage_1, has_insurance_usage_1, has_investment_usage_1,\n  ncol = 4,\n  nrow = 2\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03A2_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\nThe plot above reveals that majority individuals that have formal financial service usage are from the rural cluster, have mobile banking, but not bank usage. They also do not have pension usage, insurance usage, or investment usages.\n\n### 6.4 Multiple Histogram Plots - Informal\n\nLikewise, we will create 7 histograms that represent the different independent variables for **informal financial service usage** in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_rural_2 <- ggplot(gbTZ_Informal, aes(x = as.factor(is_rural))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Rural\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nis_urban_2 <- ggplot(gbTZ_Informal, aes(x = as.factor(is_urban))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Urban\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_mobile_usage_2 <- ggplot(gbTZ_Informal, aes(x = as.factor(has_mobile_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Mobile Banking\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_bank_usage_2 <- ggplot(gbTZ_Informal, aes(x = as.factor(has_bank_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Bank\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_pension_usage_2 <- ggplot(gbTZ_Informal, aes(x = as.factor(has_pension_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Pension\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_insurance_usage_2 <- ggplot(gbTZ_Informal, aes(x = as.factor(has_insurance_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Insurance\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nhas_investment_usage_2 <- ggplot(gbTZ_Informal, aes(x = as.factor(has_investment_usage))) +   \n  geom_bar(fill = \"skyblue\") +   \n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5, size = 3) + \n  labs(x = \"Investment\", y = \"Count\") +   \n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +   \n  ylim(0, 7000) + \n  theme_minimal()\n\nggarrange(\n  is_rural_2, is_urban_2, has_mobile_usage_2, \n  has_bank_usage_2, has_pension_usage_2, has_insurance_usage_2,\n  has_investment_usage_2,\n  ncol = 4,\n  nrow = 2\n)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03A2_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\nThe plot above reveals that majority individuals that have informal financial service usage are from the rural cluster, have mobile banking, but not bank usage. They also do not have pension usage, insurance usage, or investment usages. Note that this is similar to our analysis of the plot output for formal financial service usage in the previous section.\n\n## 7.0 Financial Inclusion Modeling using GWmodel\n\n### 7.1 Converting Simple Feature to Spatial Points\n\nWe will convert the gbTZ_Formal from a simple feature object into a Spatial Points data frame because spdep package can only process sp conformed spatial data objects. This will be performed using the code chunk below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbTZ_FormalSP <- as_Spatial(gbTZ_Formal)\ngbTZ_FormalSP\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatialPolygonsDataFrame \nfeatures    : 6700 \nextent      : -547292.6, 658089.6, 8698828, 9890499  (xmin, xmax, ymin, ymax)\ncrs         : +proj=utm +zone=37 +south +a=6378249.145 +rf=293.465 +towgs84=-160,-6,-302,0,0,0,0 +units=m +no_defs \nvariables   : 12\nnames       : district,   SN, age, land_size, formal_finservice_usage, is_rural, is_urban, has_mobile_usage, has_bank_usage, has_pension_usage, has_insurance_usage, has_investment_usage \nmin values  :   Arusha,    1,  16,       0-5,                       1,        0,        0,                0,              0,                 0,                   0,                    0 \nmax values  :     Wete, 9915, 100,    50-100,                       1,        1,        1,                1,              1,                 1,                   1,                    1 \n```\n\n\n:::\n:::\n\n\nNext, we will be doing the financial inclusion modelling using GWmodel by using both the fixed and adaptive bandwidth schemes.\n\n### 7.2 Fixed Bandwidth GWR Model\n\nIn the code chunk below, bw.gwr() is used to determine the optimal fixed bandwidth to be used in the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw.fixed <- bw.gwr(\n  formula = formal_finservice_usage ~ age + is_rural + is_urban +\n    has_mobile_usage + has_bank_usage + has_pension_usage + \n    has_insurance_usage + has_investment_usage,\n  data = gbTZ_FormalSP,\n  approach = \"CV\", \n  kernel = \"gaussian\", \n  adaptive = FALSE, \n  longlat = FALSE \n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nFixed bandwidth: 987432.1 CV score: 22880.16 \nFixed bandwidth: 610388.6 CV score: 747.5205 \nFixed bandwidth: 377363 CV score: 45.55502 \nFixed bandwidth: 233345.2 CV score: 1571.232 \nFixed bandwidth: 466370.8 CV score: 47.95333 \nFixed bandwidth: 322353.1 CV score: 1.770887e+22 \nFixed bandwidth: 411360.9 CV score: 352.1635 \nFixed bandwidth: 356351 CV score: 1.605605e+24 \nFixed bandwidth: 390349 CV score: 1062.088 \nFixed bandwidth: 369337.1 CV score: 357.9162 \nFixed bandwidth: 382323.2 CV score: 2.127712e+26 \nFixed bandwidth: 374297.4 CV score: 112.7846 \nFixed bandwidth: 379257.6 CV score: 27.39943 \nFixed bandwidth: 380428.5 CV score: 1148.343 \nFixed bandwidth: 378533.9 CV score: 5703.256 \nFixed bandwidth: 379704.9 CV score: 36.71049 \nFixed bandwidth: 378981.2 CV score: 1136.048 \nFixed bandwidth: 379428.4 CV score: 109.2795 \nFixed bandwidth: 379152 CV score: 419.9114 \nFixed bandwidth: 379322.8 CV score: 3.777893e+22 \nFixed bandwidth: 379217.3 CV score: 134.8313 \nFixed bandwidth: 379282.5 CV score: 25.07924 \nFixed bandwidth: 379297.9 CV score: 75.41214 \nFixed bandwidth: 379273 CV score: 1470.092 \nFixed bandwidth: 379288.4 CV score: 46.02101 \nFixed bandwidth: 379278.9 CV score: 2.342294e+24 \nFixed bandwidth: 379284.8 CV score: 1890.25 \nFixed bandwidth: 379281.1 CV score: 1017.842 \nFixed bandwidth: 379283.4 CV score: 1087.648 \nFixed bandwidth: 379282 CV score: 4.25013e+22 \nFixed bandwidth: 379282.8 CV score: 90.88415 \nFixed bandwidth: 379282.3 CV score: 4.835703e+24 \nFixed bandwidth: 379282.6 CV score: 140.7534 \nFixed bandwidth: 379282.4 CV score: 5.858686e+23 \nFixed bandwidth: 379282.6 CV score: 251.4205 \nFixed bandwidth: 379282.5 CV score: 345.7589 \nFixed bandwidth: 379282.5 CV score: 3.541775e+23 \nFixed bandwidth: 379282.5 CV score: 575.5683 \nFixed bandwidth: 379282.5 CV score: 335.232 \nFixed bandwidth: 379282.5 CV score: 23.8124 \nFixed bandwidth: 379282.5 CV score: 4.835703e+24 \nFixed bandwidth: 379282.5 CV score: 222.2371 \nFixed bandwidth: 379282.5 CV score: 410.3286 \nFixed bandwidth: 379282.5 CV score: 1.088033e+25 \nFixed bandwidth: 379282.5 CV score: 18.67962 \nFixed bandwidth: 379282.5 CV score: 54.45861 \nFixed bandwidth: 379282.5 CV score: 2.43497e+21 \nFixed bandwidth: 379282.5 CV score: 6.286414e+25 \nFixed bandwidth: 379282.5 CV score: 28472.28 \nFixed bandwidth: 379282.5 CV score: 7.253555e+25 \n```\n\n\n:::\n:::\n\n\nThe result shows that the recommended bandwidth is 379282.5\n\nNow, we can use the code chunk below to calibrate the gwr model using fixed bandwidth and gaussian kernel.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr.fixed <- gwr.basic(\n  formula = formal_finservice_usage ~ age + is_rural + is_urban +\n            has_mobile_usage + has_bank_usage + has_pension_usage +\n            has_insurance_usage + has_investment_usage,\n  data = gbTZ_FormalSP,\n  bw = bw.fixed,\n  kernel = \"gaussian\", \n  longlat = FALSE\n)\n```\n:::\n\n\nThe code chunk below is used to display the model output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr.fixed\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-11-11 01:17:29 \n   Call:\n   gwr.basic(formula = formal_finservice_usage ~ age + is_rural + \n    is_urban + has_mobile_usage + has_bank_usage + has_pension_usage + \n    has_insurance_usage + has_investment_usage, data = gbTZ_FormalSP, \n    bw = bw.fixed, kernel = \"gaussian\", longlat = FALSE)\n\n   Dependent (y) variable:  formal_finservice_usage\n   Independent variables:  age is_rural is_urban has_mobile_usage has_bank_usage has_pension_usage has_insurance_usage has_investment_usage\n   Number of data points: 6700\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n       Min         1Q     Median         3Q        Max \n-1.130e-15 -5.300e-16 -1.900e-16 -3.000e-17  1.707e-12 \n\n   Coefficients: (1 not defined because of singularities)\n                          Estimate Std. Error    t value Pr(>|t|)    \n   (Intercept)           1.000e+00  1.393e-15  7.181e+14   <2e-16 ***\n   age                  -6.949e-18  1.697e-17 -4.090e-01    0.682    \n   is_rural             -8.000e-16  5.479e-16 -1.460e+00    0.144    \n   is_urban                     NA         NA         NA       NA    \n   has_mobile_usage      4.337e-17  1.103e-15  3.900e-02    0.969    \n   has_bank_usage       -4.763e-16  6.280e-16 -7.580e-01    0.448    \n   has_pension_usage     1.987e-16  5.204e-15  3.800e-02    0.970    \n   has_insurance_usage  -2.322e-16  8.228e-16 -2.820e-01    0.778    \n   has_investment_usage -1.503e-16  5.083e-15 -3.000e-02    0.976    \n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 2.088e-14 on 6692 degrees of freedom\n   Multiple R-squared:   0.5\n   Adjusted R-squared: 0.4995 \n   F-statistic: 956.1 on 7 and 6692 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 2.917156e-24\n   Sigma(hat): 2.086927e-14\n   AIC:  -403074.9\n   AICc:  -403074.9\n   BIC:  -409618.7\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 379282.5 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.   Max.\n   Intercept             7.7076e-01  9.8936e-01  9.9937e-01  1.0084e+00 1.2073\n   age                  -3.2353e-16 -1.8865e-17  4.6214e-18  2.5587e-17 0.0000\n   is_rural             -2.8295e-01 -8.0950e-03  1.1340e-03  8.4172e-03 0.2761\n   is_urban             -2.8316e-01 -8.2258e-03 -3.4451e-04  6.8684e-03 0.1827\n   has_mobile_usage     -1.4155e-14 -2.6090e-15  2.3592e-16  2.4425e-15 0.0000\n   has_bank_usage       -9.4369e-16 -1.8041e-16  2.7756e-17  2.0817e-16 0.0000\n   has_pension_usage    -1.4211e-14 -3.5527e-15  0.0000e+00  3.5527e-15 0.0000\n   has_insurance_usage  -5.4401e-15 -4.5797e-16 -2.7756e-17  2.6368e-16 0.0000\n   has_investment_usage -2.1316e-14 -1.7764e-15  0.0000e+00  3.5527e-15 0.0000\n   ************************Diagnostic information*************************\n   Number of data points: 6700 \n   Effective number of parameters (2trace(S) - trace(S'S)): 27.17595 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 6672.824 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): -16326.16 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): -16348.35 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): -22891.75 \n   Residual sum of squares: 34.08784 \n   R-square value:  -Inf \n   Adjusted R-square value:  -Inf \n\n   ***********************************************************************\n   Program stops at: 2024-11-11 01:17:51 \n```\n\n\n:::\n:::\n\n\n### 7.3 Adaptive Bandwidth GWR Model\n\nLikewise, we will use bw.gwr() to determine the recommended data point to use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw.adaptive <- bw.gwr(\n  formula = formal_finservice_usage ~ age + is_rural + is_urban +\n    has_mobile_usage + has_bank_usage + has_pension_usage + \n    has_insurance_usage + has_investment_usage,\n  data = gbTZ_FormalSP,\n  approach = \"CV\", \n  kernel = \"gaussian\", \n  adaptive = TRUE, \n  longlat = FALSE \n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 4148 CV score: 85.29868 \nAdaptive bandwidth: 2572 CV score: 388.0207 \nAdaptive bandwidth: 5124 CV score: 2845.688 \nAdaptive bandwidth: 3547 CV score: 137.4969 \nAdaptive bandwidth: 4522 CV score: 129.6609 \nAdaptive bandwidth: 3919 CV score: 375.8045 \nAdaptive bandwidth: 4291 CV score: 128.9413 \nAdaptive bandwidth: 4060 CV score: 202.4762 \nAdaptive bandwidth: 4202 CV score: 256.6942 \nAdaptive bandwidth: 4114 CV score: 27.82453 \nAdaptive bandwidth: 4093 CV score: 28.13117 \nAdaptive bandwidth: 4127 CV score: 24.42802 \nAdaptive bandwidth: 4135 CV score: 91.47258 \nAdaptive bandwidth: 4122 CV score: 28.53629 \nAdaptive bandwidth: 4130 CV score: 24.43066 \nAdaptive bandwidth: 4125 CV score: 24.28051 \nAdaptive bandwidth: 4123 CV score: 28.53629 \nAdaptive bandwidth: 4125 CV score: 24.28051 \n```\n\n\n:::\n:::\n\n\nThe result shows that 4125 is the recommended data point to use.\n\nNow, we will calibrate the gwr model by using adaptive bandwidth and gaussian kernel.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr.adaptive <- gwr.basic(\n  formula = formal_finservice_usage ~ age + is_rural + is_urban +\n            has_mobile_usage + has_bank_usage + has_pension_usage +\n            has_insurance_usage + has_investment_usage,\n  data = gbTZ_FormalSP,\n  bw = bw.adaptive,\n  kernel = \"gaussian\", \n  adaptive = TRUE,\n  longlat = FALSE\n)\n```\n:::\n\n\nThe code chunk below is used to display the model output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr.adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-11-11 01:21:28 \n   Call:\n   gwr.basic(formula = formal_finservice_usage ~ age + is_rural + \n    is_urban + has_mobile_usage + has_bank_usage + has_pension_usage + \n    has_insurance_usage + has_investment_usage, data = gbTZ_FormalSP, \n    bw = bw.adaptive, kernel = \"gaussian\", adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  formal_finservice_usage\n   Independent variables:  age is_rural is_urban has_mobile_usage has_bank_usage has_pension_usage has_insurance_usage has_investment_usage\n   Number of data points: 6700\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n       Min         1Q     Median         3Q        Max \n-1.130e-15 -5.300e-16 -1.900e-16 -3.000e-17  1.707e-12 \n\n   Coefficients: (1 not defined because of singularities)\n                          Estimate Std. Error    t value Pr(>|t|)    \n   (Intercept)           1.000e+00  1.393e-15  7.181e+14   <2e-16 ***\n   age                  -6.949e-18  1.697e-17 -4.090e-01    0.682    \n   is_rural             -8.000e-16  5.479e-16 -1.460e+00    0.144    \n   is_urban                     NA         NA         NA       NA    \n   has_mobile_usage      4.337e-17  1.103e-15  3.900e-02    0.969    \n   has_bank_usage       -4.763e-16  6.280e-16 -7.580e-01    0.448    \n   has_pension_usage     1.987e-16  5.204e-15  3.800e-02    0.970    \n   has_insurance_usage  -2.322e-16  8.228e-16 -2.820e-01    0.778    \n   has_investment_usage -1.503e-16  5.083e-15 -3.000e-02    0.976    \n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 2.088e-14 on 6692 degrees of freedom\n   Multiple R-squared:   0.5\n   Adjusted R-squared: 0.4995 \n   F-statistic: 956.1 on 7 and 6692 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 2.917156e-24\n   Sigma(hat): 2.086927e-14\n   AIC:  -403074.9\n   AICc:  -403074.9\n   BIC:  -409618.7\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 4125 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.   Max.\n   Intercept             7.3344e-01  9.9203e-01  9.9925e-01  1.0054e+00 1.2053\n   age                  -1.2653e-16 -1.9678e-17  4.0115e-18  2.4178e-17 0.0000\n   is_rural             -1.4288e-01 -7.6662e-03  2.3536e-04  6.8793e-03 0.1385\n   is_urban             -3.6368e-01 -5.9763e-03  2.1954e-04  1.0536e-02 0.2865\n   has_mobile_usage     -4.2577e-14 -3.1086e-15 -5.5511e-17  1.8319e-15 0.0000\n   has_bank_usage       -1.9706e-15 -2.3592e-16  2.7756e-17  1.5266e-16 0.0000\n   has_pension_usage    -1.0658e-14 -3.5527e-15  0.0000e+00  3.5527e-15 0.0000\n   has_insurance_usage  -3.0254e-15 -3.7470e-16  0.0000e+00  2.9143e-16 0.0000\n   has_investment_usage -1.0658e-14 -3.5527e-15  0.0000e+00  3.5527e-15 0.0000\n   ************************Diagnostic information*************************\n   Number of data points: 6700 \n   Effective number of parameters (2trace(S) - trace(S'S)): 14.50779 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 6685.492 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): -22506.09 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): -22519.76 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): -29129.06 \n   Residual sum of squares: 13.58674 \n   R-square value:  -Inf \n   Adjusted R-square value:  -Inf \n\n   ***********************************************************************\n   Program stops at: 2024-11-11 01:22:01 \n```\n\n\n:::\n:::\n\n\nx\n",
    "supporting": [
      "Take-Home_Ex03A2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}